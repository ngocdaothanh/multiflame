package {	import flash.events.*;	import flash.net.*;	public class Flickr extends EventDispatcher {		public static const FIND_DONE:String = "FLICKR_FIND_DONE";		private static const ENDPOINT:String = "http://api.flickr.com/services/rest/";		private var _key:String;		private var _userName:String;		private var _bitmapURLs:Array;		private var _tags:String;		private var _title:String;				private var _userId:String;		private var _setId:String;		public function Flickr(key:String, userName:String):void {			_key = key;			_userName = userName;		}				public function get bitmapURLs():Array {			return _bitmapURLs;		}		public function get userId():String {			return _userId;		}				public function get setId():String {			return _setId;		}				public function findByTags(tags:String):void {			_bitmapURLs = null;			_tags = tags;			request(onFindByUsernameOK, onFindByUsernameNG,				"flickr.people.findByUsername", "username", _userName);		}				public function findBySet(title:String):void {			_bitmapURLs = null;			_title = title;			request(onFindByUsernameOK, onFindByUsernameNG,				"flickr.people.findByUsername", "username", _userName);		}		// --------------------------------------------------------------------------		private function request(onOK:Function, onNG:Function,				method:String, ... rest):void {			var loader:URLLoader = new URLLoader();			loader.addEventListener(Event.COMPLETE, onOK);			loader.addEventListener(IOErrorEvent.IO_ERROR, onNG);			var url:String = ENDPOINT +				"?api_key=" + _key +				"&method=" + method;			for (var i:int; i < rest.length; i += 2) {				url += "&" + rest[i] + "=" + rest[i + 1];			}			loader.load(new URLRequest(url));		}		// --------------------------------------------------------------------------		private function onFindByUsernameOK(event:Event):void {			var done:Event;			try {				// Extract user id				var rsp:XML = new XML(event.target.data);				var user:XML = rsp.elements()[0];				_userId = user.attribute("nsid");				if (_userId == null) {					done = new Event(FIND_DONE);					dispatchEvent(done);				}				if (_tags != null) {					request(onFindTagsOK, onFindNG,						"flickr.photos.search", "user_id", _userId, "tags", _tags, "per_page", 500);				} else {					request(onFindSetOK, onFindNG,						"flickr.photosets.getList", "user_id", _userId);				}			} catch (e:Error) {				done = new Event(FIND_DONE);				dispatchEvent(done);			}		}				private function onFindByUsernameNG(event:IOErrorEvent):void {			var e:Event = new Event(FIND_DONE);			dispatchEvent(e);		}				// --------------------------------------------------------------------------				private function onFindTagsOK(event:Event):void {			try {				var rsp:XML = new XML(event.target.data);				var photos:XMLList = rsp.elements()[0].elements();				_bitmapURLs = new Array();				for (var i:int; i < photos.length(); i++) {					var photo:XML = photos[i];					var farmId:String   = photo.attribute("farm");					var serverId:String = photo.attribute("server");					var id:String       = photo.attribute("id");					var secret:String   = photo.attribute("secret");					_bitmapURLs.push(new BitmapURL(farmId, serverId, id, secret));				}			} catch (e:Error) {				_bitmapURLs = null;			}			var done:Event = new Event(FIND_DONE);			dispatchEvent(done);		}				private function onFindSetOK(event:Event):void {			try {				var rsp:XML = new XML(event.target.data);				var photosets:XMLList = rsp.elements()[0].elements();				for (var i:int; i < photosets.length(); i++) {					var photoset:XML = photosets[i];					_setId = photoset.attribute("id");					var title:XML = photoset.elements()[0];					if (title == _title) {						request(onFindTagsOK, onFindNG,							"flickr.photosets.getPhotos", "photoset_id", _setId, "per_page", 500);					}				}			} catch (e:Error) {				_bitmapURLs = null;			}			var done:Event = new Event(FIND_DONE);			dispatchEvent(done);		}				private function onFindNG(event:IOErrorEvent):void {			var done:Event = new Event(FIND_DONE);			dispatchEvent(done);		}	}}