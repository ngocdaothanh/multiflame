package {	import flash.display.Sprite;	import flash.events.*;	import flash.utils.ByteArray;	import flash.net.Socket;	import flash.net.ObjectEncoding;	import revent.Client;	import revent.ClientEvent;	public class Amf3 extends Sprite {		private static const HOST:String = "localhost";		private static const PORT:int    = 1935;		private var _client:Client;		public function Amf3():void {			_byteArrayBtn.addEventListener(MouseEvent.CLICK, onByteArrayBtnClick);			_client = new Client();			_client.addEventListener(ClientEvent.CONNECT, onConnect);			_client.addEventListener(ClientEvent.CLOSE, onClose);			_client.addEventListener(ClientEvent.IO_ERROR, onIOError);			_client.addEventListener(ClientEvent.SECURITY_ERROR, onSecurityError);			_client.addEventListener(ClientEvent.DATA, onData);			_status.text += "Connecting to " + HOST + ":" + PORT + "...\n";			_client.connect(HOST, PORT);		}		// ---------------------------------------------------------------------------		private function onConnect(event:ClientEvent):void {			_status.text += "onConnect\n";		}		private function onClose(event:ClientEvent):void {			_status.text += "onClose\n";		}		private function onIOError(event:ClientEvent):void {			_status.text += "onIOError\n";		}		private function onSecurityError(event:ClientEvent):void {			_status.text += "onSecurityError\n";		}		private function onData(event:ClientEvent):void {			_status.text += "onInvoke\n";			_status.text += "data:" + event.data + "\n";		}		// ---------------------------------------------------------------------------		private function onByteArrayBtnClick(event:MouseEvent):void {			//_status.text += "Testing byte array with size: " + _size + "\n";			_client.send([1, 2, 8.7, "abc"]);		}	}}