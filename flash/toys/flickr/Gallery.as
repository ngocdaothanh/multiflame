package {	import flash.display.*;	import flash.events.*;	import flash.net.*;	import flash.text.TextField;	import flash.utils.Timer;	public class Gallery extends Sprite {		public static const FIND_OK:String = "GALLERY_FIND_OK";		public static const FIND_NG:String = "GALLERY_FIND_NG";				private static const KEY:String = "ac3c439d08ad718e3b5fa1adf649f7f7";		private static const GEARS:int = 4;		private var _width:int;		private var _height:int;		private var _flickr:Flickr;		private var _strip:BitmapStrip;		private var _timer:Timer;		private var _out:Boolean;		// Timer action is executed when _count >= _maxCount		private var _count:int;		private var _maxCount:int;				private var _byTags:Boolean;		private var _textField:TextField;				public function Gallery(userName:String, width:int, height:int):void {			_width = width;			_height = height;			_flickr = new Flickr(KEY, userName);			_flickr.addEventListener(Flickr.FIND_DONE, onSearchDone);			_timer = new Timer(10);			_timer.addEventListener(TimerEvent.TIMER, onTimer);			_textField = new TextField();			_textField.x = 5;			_textField.y = 505;			_textField.width = width;			_textField.height = 30;			addChild(_textField);			addEventListener(Event.ADDED, onAdded);			addEventListener(Event.REMOVED, onRemoved);			addEventListener(MouseEvent.MOUSE_OUT, onMouseOut);			addEventListener(MouseEvent.MOUSE_OVER, onMouseOver);		}				public function findByTags(tags:String):void {			_byTags = true;			_flickr.findByTags(tags);		}				public function findBySet(title:String):void {			_byTags = false;			_flickr.findBySet(title);		}		private function onAdded(event:Event):void {			if (event.target == this) {				_count = 0;				_maxCount = 1;				_timer.start();			}		}		private function onRemoved(event:Event):void {			_timer.stop();		}		private function onMouseOut(event:MouseEvent):void {			_out = true;		}				private function onMouseOver(event:MouseEvent):void {			_out = false;		}		private function onSearchDone(event:Event):void {			if (_flickr.bitmapURLs != null && _flickr.bitmapURLs.length > 0) {				_strip = new BitmapStrip(_flickr.bitmapURLs, _width, _height);				_strip.addEventListener(BitmapStrip.DOWNLOAD_FIRST_OK, onDownloadFirstOK);				_strip.addEventListener(BitmapStrip.DOWNLOAD_LAST_OK, onDownloadLastOK);				_strip.download();								var url:String = "http://www.flickr.com/photos/" + _flickr.userId;				if (!_byTags) {					url += "/sets/" + _flickr.setId;				}				_textField.htmlText = '<a href="' + url + '"><font face="_sans" size="15" color="#ffffff">' + url + '</font></a>';							} else {				_textField.htmlText = '<font face="_sans" size="15" color="#ffffff">Search error</font>';				dispatchEvent(new Event(FIND_NG));			}		}						private function onDownloadLastOK(event:Event):void {			addChild(_strip.buffer[_strip.buffer.length - 1]);			removeBitmap();		}		private function onDownloadFirstOK(event:Event):void {			addChild(_strip.buffer[0]);			removeBitmap();			dispatchEvent(new Event(FIND_OK));		}				private function removeBitmap():void {			if (_strip.removedBuffer != null) {				for (var i:int = 0; i < _strip.removedBuffer.length; i++) {					removeChild(_strip.removedBuffer[i]);					_strip.removedBuffer[i].bitmapData.dispose();				}				_strip.removedBuffer.splice(0, _strip.removedBuffer.length);			}		}		private function onTimer(event:TimerEvent):void {			if (_out) {				return;			}			if (_strip != null && _strip.buffer != null && _strip.buffer.length > 0) {				var dx = (mouseX - stage.stageWidth/2);				var aDx = Math.abs(dx);				// Check if the strip should be stopped				var stopDx:int = (stage.stageWidth/(GEARS*2 + 1))/2;				if (aDx <= stopDx) {					return;				}				_count++;				// Calculate _maxCount				_maxCount = GEARS - (aDx - stopDx)/(2*stopDx);							if (_count >= _maxCount) {					_count = 0;					_strip.navigate(dx > 0);				}			}		}	}}